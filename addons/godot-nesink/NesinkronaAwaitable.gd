# (内部用) 待機可能な単位を表します。
class_name NesinkronaAwaitable

#-------------------------------------------------------------------------------
# 定数
#-------------------------------------------------------------------------------

enum {
	# (内部用) まだ完了もしくはキャンセルされておらず待機中であることを表します。
	STATE_PENDING,
	# (内部用) まだ完了もしくはキャンセルされておらず待機中であり、
	# 履行外から 1 つ以上の完了の待機があることを表します。
	STATE_PENDING_WITH_WAITERS,
	# (内部用) 完了したことを表します。
	STATE_COMPLETED,
	# (内部用) キャンセルされたことを表します。
	STATE_CANCELED,
}

#-------------------------------------------------------------------------------
# プロパティ
#-------------------------------------------------------------------------------

## この待機可能な単位の履行が完了しているかを返します。
##
## [method wait] を待機した後は、[member is_canceled] もしくは
## このプロパティのうちどちらかが必ず true になります。
var is_completed: bool:
	get: return get_state() == STATE_COMPLETED

## この待機可能な単位の履行がキャンセルされているかを返します。
##
## [method wait] を待機した後は、[member is_completed] もしくは
## このプロパティのうちどちらかが必ず true になります。
var is_canceled: bool:
	get: return get_state() == STATE_CANCELED

#-------------------------------------------------------------------------------
# メソッド
#-------------------------------------------------------------------------------

## この待機可能な単位の履行が完了もしくはキャンセルされるまで待機します。
func wait(cancel: Cancel = null):
	#
	# 継承先で実装する必要があります。
	#

	return await null

# (内部用) この関数ではなく [member is_completed] もしくは [member is_canceled] を
# 使うようにしてください。将来名前が変わる可能性があります。
func get_state() -> int:
	#
	# 継承先で実装する必要があります。
	#

	return STATE_PENDING
